name: Prod - Terraform Apply
on:
  push:
    branches:
      - "main"
    paths:
      - "prod/**"

  workflow_dispatch:
    inputs:
      pr_number:
        description: The Pull Request number
        required: true
        type: number

permissions:
  id-token: write # This is required for requesting the JWT (OIDC)
  contents: read
  pull-requests: write

jobs:
  prod_terraform_apply:
    environment:
      name: Production
    env:
      tf_dir: "prod"
    defaults:
      run:
        working-directory: ${{ env.tf_dir }}

    runs-on: ubuntu-22.04
    steps:
      - id: checkout_latest
        name: Checkout latest
        uses: actions/checkout@v4

      - id: extract_pr_info
        name: Extract PR Info
        uses: Innovate-Future-Foundation/common-action/extract-pr-info@main
        with:
          github_token: ${{ github.token }}
          pr_number: ${{ inputs.pr_number }}

      - id: tf_prep
        name: Terraform setup using oidc role
        uses: Innovate-Future-Foundation/common-action/setup-tf-aws@main
        with:
          terraform_dir: ${{ env.tf_dir }}
          terraform_version: ${{ vars.TF_VERSION }}
          backend_region: ${{ secrets.TF_BACKEND_REGION }}
          backend_role_arn: "arn:aws:iam::${{ secrets.AWS_PROD_ACCOUNT }}:role/oidc-${{ vars.REPO_ORG_ABBR }}-${{ github.event.repository.name }}"
          backend_state_bucket: ${{ secrets.TF_BACKEND_STATE_BUCKET }}
          backend_lockid_table: ${{ secrets.TF_BACKEND_LOCKID_TABLE }}

      - id: tf_apply_plan
        name: Terraform apply plan file from s3
        if: steps.extract_pr_info.outputs.PR_NUMBER != 0
        uses: Innovate-Future-Foundation/common-action/apply-tfplan-s3@main
        with:
          tf_dir: ${{ env.tf_dir }}
          s3_bucket: ${{ secrets.WORKFLOW_TEMP_BUCKET }}
          obj_key: "plans/plan-${{ steps.extract_pr_info.outputs.PR_NUMBER }}_${{ env.tf_dir }}"

      - id: tf_hot_apply
        if: steps.extract_pr_info.outputs.PR_NUMBER == 0
        name: Terraform Fast Apply For Hotfix
        run: terraform apply -auto-approve
        env:
          TF_VAR_region: ${{ secrets.AWS_REGION }}
          TF_VAR_ecr_region: ${{ secrets.AWS_CENTRAL_ECR_REGION }}
          TF_VAR_repo_abbr: ${{ vars.REPO_ORG_ABBR }}
          TF_VAR_backend_repo: ${{ vars.REPO_BACKEND }}
          TF_VAR_dev_account_id: ${{ secrets.AWS_DEV_ACCOUNT }} 
          TF_VAR_uat_account_id: ${{ secrets.AWS_UAT_ACCOUNT }}
          TF_VAR_prod_account_id: ${{ secrets.AWS_PROD_ACCOUNT }}
